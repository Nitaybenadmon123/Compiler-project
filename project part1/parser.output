Terminals unused in grammar

    BAR


Rules useless in parser due to conflicts

   14 par_list: ε

   43 var_stmt: VAR type_decls block

   65 if_stmt: IF expr COLON block

   72 while_stmt: WHILE expr COLON block

   77 for_stmt: FOR LPAREN assignment expr SEMICOLON update_expr RPAREN COLON block

   89 $@6: ε


State 9 conflicts: 1 shift/reduce
State 29 conflicts: 23 shift/reduce
State 37 conflicts: 11 shift/reduce
State 38 conflicts: 2 shift/reduce
State 44 conflicts: 1 reduce/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 23 shift/reduce, 26 reduce/reduce
State 71 conflicts: 3 shift/reduce
State 73 conflicts: 23 shift/reduce
State 74 conflicts: 23 shift/reduce
State 77 conflicts: 2 shift/reduce
State 83 conflicts: 23 shift/reduce
State 89 conflicts: 23 shift/reduce
State 94 conflicts: 23 shift/reduce
State 114 conflicts: 23 shift/reduce, 26 reduce/reduce
State 115 conflicts: 23 shift/reduce, 26 reduce/reduce
State 124 conflicts: 24 shift/reduce
State 126 conflicts: 23 shift/reduce
State 128 conflicts: 23 shift/reduce
State 132 conflicts: 23 shift/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 147 conflicts: 26 reduce/reduce
State 150 conflicts: 3 shift/reduce
State 163 conflicts: 23 shift/reduce
State 172 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce, 26 reduce/reduce
State 176 conflicts: 26 reduce/reduce
State 193 conflicts: 23 shift/reduce, 26 reduce/reduce
State 220 conflicts: 23 shift/reduce
State 247 conflicts: 1 shift/reduce
State 268 conflicts: 23 shift/reduce
State 278 conflicts: 26 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: func_list
    2        | error

    3 func_list: func_list function
    4          | function

    5 $@1: ε

    6 function: DEF ID LPAREN par_list RPAREN COLON RETURNS type $@1 stmt_list

    7 $@2: ε

    8 function: DEF ID LPAREN RPAREN COLON RETURNS type $@2 stmt_list

    9 $@3: ε

   10 function: DEF ID LPAREN par_list RPAREN COLON $@3 stmt_list

   11 $@4: ε

   12 function: DEF ID LPAREN RPAREN COLON $@4 stmt_list

   13 par_list: param_list_item_list
   14         | ε

   15 param_list_item_list: param_list_item_list SEMICOLON par_list_item
   16                     | par_list_item

   17 par_list_item: ID type COLON ID

   18 type: TYPE_INT
   19     | TYPE_CHAR
   20     | TYPE_REAL
   21     | TYPE_BOOL
   22     | TYPE_STRING
   23     | TYPE_INT_PTR
   24     | TYPE_CHAR_PTR
   25     | TYPE_REAL_PTR

   26 stmt_list: stmt_list stmt
   27          | stmt

   28 stmt: assignment
   29     | if_stmt
   30     | return_stmt
   31     | block
   32     | while_stmt
   33     | for_stmt
   34     | call_args
   35     | do_while_stmt
   36     | var_stmt
   37     | void_call
   38     | assignment_call
   39     | func_list

   40 assignment: ID ASSIGN expr SEMICOLON
   41           | ID LBRACK expr RBRACK ASSIGN expr SEMICOLON
   42           | MULT ID ASSIGN expr SEMICOLON

   43 var_stmt: VAR type_decls block
   44         | VAR type_decls stmt

   45 type_decls: type_decls type_decl
   46           | type_decl

   47 type_decl: TYPE TYPE_INT COLON ID SEMICOLON
   48          | TYPE TYPE_BOOL COLON ID SEMICOLON
   49          | TYPE TYPE_CHAR COLON ID SEMICOLON
   50          | TYPE TYPE_STRING COLON ID SEMICOLON
   51          | TYPE TYPE_REAL COLON ID SEMICOLON
   52          | TYPE TYPE_REAL COLON ID COLON NUM SEMICOLON
   53          | TYPE TYPE_INT COLON ID COLON NUM SEMICOLON
   54          | TYPE TYPE_CHAR COLON ID COLON CHAR_LITERAL SEMICOLON
   55          | TYPE TYPE_STRING COLON ID COLON STRING_LITERAL SEMICOLON
   56          | TYPE TYPE_BOOL COLON ID COLON TRUE SEMICOLON
   57          | TYPE TYPE_BOOL COLON ID COLON FALSE SEMICOLON
   58          | TYPE TYPE_STRING COLON ID LBRACK NUM RBRACK SEMICOLON
   59          | TYPE TYPE_INT_PTR COLON ID SEMICOLON
   60          | TYPE TYPE_CHAR_PTR COLON ID SEMICOLON
   61          | TYPE TYPE_REAL_PTR COLON ID SEMICOLON

   62 return_stmt: RETURN expr SEMICOLON
   63            | RETURN SEMICOLON

   64 if_stmt: IF expr COLON block ELSE COLON block
   65        | IF expr COLON block
   66        | IF expr COLON stmt
   67        | IF expr COLON stmt ELSE COLON stmt
   68        | IF expr COLON block elif_list ELSE COLON block

   69 elif_list: ELIF expr COLON block
   70          | elif_list ELIF expr COLON block

   71 while_stmt: WHILE COLON expr SEMICOLON
   72           | WHILE expr COLON block
   73           | WHILE expr COLON stmt

   74 do_while_stmt: DO COLON stmt_list WHILE expr SEMICOLON
   75              | DO COLON stmt WHILE expr SEMICOLON
   76              | DO COLON block WHILE expr SEMICOLON

   77 for_stmt: FOR LPAREN assignment expr SEMICOLON update_expr RPAREN COLON block
   78         | FOR LPAREN assignment expr SEMICOLON update_expr RPAREN COLON stmt

   79 update_expr: ID ASSIGN expr
   80            | expr

   81 call_args: call_list
   82          | ε

   83 call_list: call_list COMMA expr
   84          | expr

   85 assignment_call: ID ASSIGN CALL ID LPAREN call_args RPAREN SEMICOLON

   86 void_call: CALL ID LPAREN call_args RPAREN SEMICOLON

   87 $@5: ε

   88 block: T_BEGIN $@5 stmt_list T_END

   89 $@6: ε

   90 block: T_BEGIN $@6 T_END

   91 expr: expr PLUS expr
   92     | expr MINUS expr
   93     | expr MULT expr
   94     | expr DIV expr
   95     | expr EQ expr
   96     | expr NE expr
   97     | expr LT expr
   98     | expr GT expr
   99     | expr LE expr
  100     | expr GE expr
  101     | LPAREN expr RPAREN
  102     | ID LBRACK expr RBRACK
  103     | LBRACK expr RBRACK
  104     | NUM
  105     | ID
  106     | CHAR_LITERAL
  107     | STRING_LITERAL
  108     | NULLPTR
  109     | TRUE
  110     | FALSE
  111     | AND
  112     | OR
  113     | NOT
  114     | CALL ID LPAREN call_args RPAREN
  115     | ID LPAREN call_args RPAREN
  116     | expr AND expr
  117     | expr OR expr
  118     | NOT expr
  119     | MULT ID
  120     | ADDRESS ID


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2
    OR (258) 112 117
    AND (259) 111 116
    PLUS (260) 91
    MINUS (261) 92
    MULT (262) 42 93 119
    DIV (263) 94
    EQ (264) 95
    NE (265) 96
    GT (266) 98
    GE (267) 100
    LT (268) 97
    LE (269) 99
    NOT (270) 113 118
    ID <sval> (271) 6 8 10 12 17 40 41 42 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 79 85 86 102 105 114 115 119 120
    CHAR_LITERAL <sval> (272) 54 106
    STRING_LITERAL <sval> (273) 55 107
    NUM <sval> (274) 52 53 58 104
    TRUE <sval> (275) 56 109
    FALSE <sval> (276) 57 110
    TYPE_INT <sval> (277) 18 47 53
    TYPE_CHAR <sval> (278) 19 49 54
    TYPE_REAL <sval> (279) 20 51 52
    TYPE_BOOL <sval> (280) 21 48 56 57
    TYPE_STRING <sval> (281) 22 50 55 58
    TYPE_INT_PTR <sval> (282) 23 59
    TYPE_CHAR_PTR <sval> (283) 24 60
    TYPE_REAL_PTR <sval> (284) 25 61
    DEF (285) 6 8 10 12
    T_BEGIN (286) 88 90
    T_END (287) 88 90
    IF (288) 64 65 66 67 68
    ELSE (289) 64 67 68
    ELIF (290) 69 70
    WHILE (291) 71 72 73 74 75 76
    FOR (292) 77 78
    DO (293) 74 75 76
    CALL (294) 85 86 114
    RETURN (295) 62 63
    RETURNS (296) 6 8
    VAR (297) 43 44
    NULLPTR (298) 108
    ASSIGN (299) 40 41 42 79 85
    ADDRESS (300) 120
    COLON (301) 6 8 10 12 17 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    SEMICOLON (302) 15 40 41 42 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 71 74 75 76 77 78 85 86
    COMMA (303) 83
    LPAREN (304) 6 8 10 12 77 78 85 86 101 114 115
    RPAREN (305) 6 8 10 12 77 78 85 86 101 114 115
    LBRACK (306) 41 58 102 103
    RBRACK (307) 41 58 102 103
    BAR (308)
    TYPE (309) 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program <ast> (56)
        on left: 1 2
        on right: 0
    func_list <ast> (57)
        on left: 3 4
        on right: 1 3 39
    function <ast> (58)
        on left: 6 8 10 12
        on right: 3 4
    $@1 (59)
        on left: 5
        on right: 6
    $@2 (60)
        on left: 7
        on right: 8
    $@3 (61)
        on left: 9
        on right: 10
    $@4 (62)
        on left: 11
        on right: 12
    par_list <ast> (63)
        on left: 13 14
        on right: 6 10
    param_list_item_list <ast> (64)
        on left: 15 16
        on right: 13 15
    par_list_item <ast> (65)
        on left: 17
        on right: 15 16
    type <ast> (66)
        on left: 18 19 20 21 22 23 24 25
        on right: 6 8 17
    stmt_list <ast> (67)
        on left: 26 27
        on right: 6 8 10 12 26 74 88
    stmt <ast> (68)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 26 27 44 66 67 73 75 78
    assignment <ast> (69)
        on left: 40 41 42
        on right: 28 77 78
    var_stmt <ast> (70)
        on left: 43 44
        on right: 36
    type_decls <ast> (71)
        on left: 45 46
        on right: 43 44 45
    type_decl <ast> (72)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 45 46
    return_stmt <ast> (73)
        on left: 62 63
        on right: 30
    if_stmt <ast> (74)
        on left: 64 65 66 67 68
        on right: 29
    elif_list <ast> (75)
        on left: 69 70
        on right: 68 70
    while_stmt <ast> (76)
        on left: 71 72 73
        on right: 32
    do_while_stmt <ast> (77)
        on left: 74 75 76
        on right: 35
    for_stmt <ast> (78)
        on left: 77 78
        on right: 33
    update_expr <ast> (79)
        on left: 79 80
        on right: 77 78
    call_args <ast> (80)
        on left: 81 82
        on right: 34 85 86 114 115
    call_list <ast> (81)
        on left: 83 84
        on right: 81 83
    assignment_call <ast> (82)
        on left: 85
        on right: 38
    void_call <ast> (83)
        on left: 86
        on right: 37
    block <ast> (84)
        on left: 88 90
        on right: 31 43 64 65 68 69 70 72 76 77
    $@5 (85)
        on left: 87
        on right: 88
    $@6 (86)
        on left: 89
        on right: 90
    expr <ast> (87)
        on left: 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120
        on right: 40 41 42 62 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 83 84 91 92 93 94 95 96 97 98 99 100 101 102 103 116 117 118


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    DEF    shift, and go to state 2

    program    go to state 3
    func_list  go to state 4
    function   go to state 5


State 1

    2 program: error •

    $default  reduce using rule 2 (program)


State 2

    6 function: DEF • ID LPAREN par_list RPAREN COLON RETURNS type $@1 stmt_list
    8         | DEF • ID LPAREN RPAREN COLON RETURNS type $@2 stmt_list
   10         | DEF • ID LPAREN par_list RPAREN COLON $@3 stmt_list
   12         | DEF • ID LPAREN RPAREN COLON $@4 stmt_list

    ID  shift, and go to state 6


State 3

    0 $accept: program • $end

    $end  shift, and go to state 7


State 4

    1 program: func_list •
    3 func_list: func_list • function

    DEF  shift, and go to state 2

    $default  reduce using rule 1 (program)

    function  go to state 8


State 5

    4 func_list: function •

    $default  reduce using rule 4 (func_list)


State 6

    6 function: DEF ID • LPAREN par_list RPAREN COLON RETURNS type $@1 stmt_list
    8         | DEF ID • LPAREN RPAREN COLON RETURNS type $@2 stmt_list
   10         | DEF ID • LPAREN par_list RPAREN COLON $@3 stmt_list
   12         | DEF ID • LPAREN RPAREN COLON $@4 stmt_list

    LPAREN  shift, and go to state 9


State 7

    0 $accept: program $end •

    $default  accept


State 8

    3 func_list: func_list function •

    $default  reduce using rule 3 (func_list)


State 9

    6 function: DEF ID LPAREN • par_list RPAREN COLON RETURNS type $@1 stmt_list
    8         | DEF ID LPAREN • RPAREN COLON RETURNS type $@2 stmt_list
   10         | DEF ID LPAREN • par_list RPAREN COLON $@3 stmt_list
   12         | DEF ID LPAREN • RPAREN COLON $@4 stmt_list

    ID      shift, and go to state 10
    RPAREN  shift, and go to state 11

    RPAREN  [reduce using rule 14 (par_list)]

    par_list              go to state 12
    param_list_item_list  go to state 13
    par_list_item         go to state 14


State 10

   17 par_list_item: ID • type COLON ID

    TYPE_INT       shift, and go to state 15
    TYPE_CHAR      shift, and go to state 16
    TYPE_REAL      shift, and go to state 17
    TYPE_BOOL      shift, and go to state 18
    TYPE_STRING    shift, and go to state 19
    TYPE_INT_PTR   shift, and go to state 20
    TYPE_CHAR_PTR  shift, and go to state 21
    TYPE_REAL_PTR  shift, and go to state 22

    type  go to state 23


State 11

    8 function: DEF ID LPAREN RPAREN • COLON RETURNS type $@2 stmt_list
   12         | DEF ID LPAREN RPAREN • COLON $@4 stmt_list

    COLON  shift, and go to state 24


State 12

    6 function: DEF ID LPAREN par_list • RPAREN COLON RETURNS type $@1 stmt_list
   10         | DEF ID LPAREN par_list • RPAREN COLON $@3 stmt_list

    RPAREN  shift, and go to state 25


State 13

   13 par_list: param_list_item_list •
   15 param_list_item_list: param_list_item_list • SEMICOLON par_list_item

    SEMICOLON  shift, and go to state 26

    $default  reduce using rule 13 (par_list)


State 14

   16 param_list_item_list: par_list_item •

    $default  reduce using rule 16 (param_list_item_list)


State 15

   18 type: TYPE_INT •

    $default  reduce using rule 18 (type)


State 16

   19 type: TYPE_CHAR •

    $default  reduce using rule 19 (type)


State 17

   20 type: TYPE_REAL •

    $default  reduce using rule 20 (type)


State 18

   21 type: TYPE_BOOL •

    $default  reduce using rule 21 (type)


State 19

   22 type: TYPE_STRING •

    $default  reduce using rule 22 (type)


State 20

   23 type: TYPE_INT_PTR •

    $default  reduce using rule 23 (type)


State 21

   24 type: TYPE_CHAR_PTR •

    $default  reduce using rule 24 (type)


State 22

   25 type: TYPE_REAL_PTR •

    $default  reduce using rule 25 (type)


State 23

   17 par_list_item: ID type • COLON ID

    COLON  shift, and go to state 27


State 24

    8 function: DEF ID LPAREN RPAREN COLON • RETURNS type $@2 stmt_list
   12         | DEF ID LPAREN RPAREN COLON • $@4 stmt_list

    RETURNS  shift, and go to state 28

    $default  reduce using rule 11 ($@4)

    $@4  go to state 29


State 25

    6 function: DEF ID LPAREN par_list RPAREN • COLON RETURNS type $@1 stmt_list
   10         | DEF ID LPAREN par_list RPAREN • COLON $@3 stmt_list

    COLON  shift, and go to state 30


State 26

   15 param_list_item_list: param_list_item_list SEMICOLON • par_list_item

    ID  shift, and go to state 10

    par_list_item  go to state 31


State 27

   17 par_list_item: ID type COLON • ID

    ID  shift, and go to state 32


State 28

    8 function: DEF ID LPAREN RPAREN COLON RETURNS • type $@2 stmt_list

    TYPE_INT       shift, and go to state 15
    TYPE_CHAR      shift, and go to state 16
    TYPE_REAL      shift, and go to state 17
    TYPE_BOOL      shift, and go to state 18
    TYPE_STRING    shift, and go to state 19
    TYPE_INT_PTR   shift, and go to state 20
    TYPE_CHAR_PTR  shift, and go to state 21
    TYPE_REAL_PTR  shift, and go to state 22

    type  go to state 33


State 29

   12 function: DEF ID LPAREN RPAREN COLON $@4 • stmt_list

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt_list        go to state 57
    stmt             go to state 58
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 30

    6 function: DEF ID LPAREN par_list RPAREN COLON • RETURNS type $@1 stmt_list
   10         | DEF ID LPAREN par_list RPAREN COLON • $@3 stmt_list

    RETURNS  shift, and go to state 72

    $default  reduce using rule 9 ($@3)

    $@3  go to state 73


State 31

   15 param_list_item_list: param_list_item_list SEMICOLON par_list_item •

    $default  reduce using rule 15 (param_list_item_list)


State 32

   17 par_list_item: ID type COLON ID •

    $default  reduce using rule 17 (par_list_item)


State 33

    8 function: DEF ID LPAREN RPAREN COLON RETURNS type • $@2 stmt_list

    $default  reduce using rule 7 ($@2)

    $@2  go to state 74


State 34

  112 expr: OR •

    $default  reduce using rule 112 (expr)


State 35

  111 expr: AND •

    $default  reduce using rule 111 (expr)


State 36

   42 assignment: MULT • ID ASSIGN expr SEMICOLON
  119 expr: MULT • ID

    ID  shift, and go to state 75


State 37

  113 expr: NOT •
  118     | NOT • expr

    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    ID              [reduce using rule 113 (expr)]
    CHAR_LITERAL    [reduce using rule 113 (expr)]
    STRING_LITERAL  [reduce using rule 113 (expr)]
    NUM             [reduce using rule 113 (expr)]
    TRUE            [reduce using rule 113 (expr)]
    FALSE           [reduce using rule 113 (expr)]
    CALL            [reduce using rule 113 (expr)]
    NULLPTR         [reduce using rule 113 (expr)]
    ADDRESS         [reduce using rule 113 (expr)]
    LPAREN          [reduce using rule 113 (expr)]
    LBRACK          [reduce using rule 113 (expr)]
    $default        reduce using rule 113 (expr)

    expr  go to state 79


State 38

   40 assignment: ID • ASSIGN expr SEMICOLON
   41           | ID • LBRACK expr RBRACK ASSIGN expr SEMICOLON
   85 assignment_call: ID • ASSIGN CALL ID LPAREN call_args RPAREN SEMICOLON
  102 expr: ID • LBRACK expr RBRACK
  105     | ID •
  115     | ID • LPAREN call_args RPAREN

    ASSIGN  shift, and go to state 80
    LPAREN  shift, and go to state 81
    LBRACK  shift, and go to state 82

    LPAREN    [reduce using rule 105 (expr)]
    LBRACK    [reduce using rule 105 (expr)]
    $default  reduce using rule 105 (expr)


State 39

  106 expr: CHAR_LITERAL •

    $default  reduce using rule 106 (expr)


State 40

  107 expr: STRING_LITERAL •

    $default  reduce using rule 107 (expr)


State 41

  104 expr: NUM •

    $default  reduce using rule 104 (expr)


State 42

  109 expr: TRUE •

    $default  reduce using rule 109 (expr)


State 43

  110 expr: FALSE •

    $default  reduce using rule 110 (expr)


State 44

   88 block: T_BEGIN • $@5 stmt_list T_END
   90      | T_BEGIN • $@6 T_END

    T_END     reduce using rule 87 ($@5)
    T_END     [reduce using rule 89 ($@6)]
    $default  reduce using rule 87 ($@5)

    $@5  go to state 83
    $@6  go to state 84


State 45

   64 if_stmt: IF • expr COLON block ELSE COLON block
   65        | IF • expr COLON block
   66        | IF • expr COLON stmt
   67        | IF • expr COLON stmt ELSE COLON stmt
   68        | IF • expr COLON block elif_list ELSE COLON block

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 85


State 46

   71 while_stmt: WHILE • COLON expr SEMICOLON
   72           | WHILE • expr COLON block
   73           | WHILE • expr COLON stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    COLON           shift, and go to state 86
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 87


State 47

   77 for_stmt: FOR • LPAREN assignment expr SEMICOLON update_expr RPAREN COLON block
   78         | FOR • LPAREN assignment expr SEMICOLON update_expr RPAREN COLON stmt

    LPAREN  shift, and go to state 88


State 48

   74 do_while_stmt: DO • COLON stmt_list WHILE expr SEMICOLON
   75              | DO • COLON stmt WHILE expr SEMICOLON
   76              | DO • COLON block WHILE expr SEMICOLON

    COLON  shift, and go to state 89


State 49

   86 void_call: CALL • ID LPAREN call_args RPAREN SEMICOLON
  114 expr: CALL • ID LPAREN call_args RPAREN

    ID  shift, and go to state 90


State 50

   62 return_stmt: RETURN • expr SEMICOLON
   63            | RETURN • SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    SEMICOLON       shift, and go to state 91
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 92


State 51

   43 var_stmt: VAR • type_decls block
   44         | VAR • type_decls stmt

    TYPE  shift, and go to state 93

    type_decls  go to state 94
    type_decl   go to state 95


State 52

  108 expr: NULLPTR •

    $default  reduce using rule 108 (expr)


State 53

  120 expr: ADDRESS • ID

    ID  shift, and go to state 96


State 54

  101 expr: LPAREN • expr RPAREN

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 97


State 55

  103 expr: LBRACK • expr RBRACK

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 98


State 56

    3 func_list: func_list • function
   39 stmt: func_list •

    DEF  shift, and go to state 2

    DEF       [reduce using rule 39 (stmt)]
    $default  reduce using rule 39 (stmt)

    function  go to state 8


State 57

   12 function: DEF ID LPAREN RPAREN COLON $@4 stmt_list •
   26 stmt_list: stmt_list • stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $end            reduce using rule 12 (function)
    $end            [reduce using rule 82 (call_args)]
    OR              [reduce using rule 12 (function)]
    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 12 (function)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 12 (function)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 12 (function)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 12 (function)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 12 (function)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 12 (function)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 12 (function)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 12 (function)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 12 (function)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 12 (function)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 12 (function)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    T_END           reduce using rule 12 (function)
    T_END           [reduce using rule 82 (call_args)]
    IF              [reduce using rule 12 (function)]
    IF              [reduce using rule 82 (call_args)]
    ELSE            reduce using rule 12 (function)
    ELSE            [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 12 (function)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 12 (function)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 12 (function)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 12 (function)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 12 (function)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 12 (function)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 12 (function)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 12 (function)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 12 (function)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 12 (function)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 12 (function)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 99
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 58

   27 stmt_list: stmt •

    $default  reduce using rule 27 (stmt_list)


State 59

   28 stmt: assignment •

    $default  reduce using rule 28 (stmt)


State 60

   36 stmt: var_stmt •

    $default  reduce using rule 36 (stmt)


State 61

   30 stmt: return_stmt •

    $default  reduce using rule 30 (stmt)


State 62

   29 stmt: if_stmt •

    $default  reduce using rule 29 (stmt)


State 63

   32 stmt: while_stmt •

    $default  reduce using rule 32 (stmt)


State 64

   35 stmt: do_while_stmt •

    $default  reduce using rule 35 (stmt)


State 65

   33 stmt: for_stmt •

    $default  reduce using rule 33 (stmt)


State 66

   34 stmt: call_args •

    $default  reduce using rule 34 (stmt)


State 67

   81 call_args: call_list •
   83 call_list: call_list • COMMA expr

    COMMA  shift, and go to state 100

    $default  reduce using rule 81 (call_args)


State 68

   38 stmt: assignment_call •

    $default  reduce using rule 38 (stmt)


State 69

   37 stmt: void_call •

    $default  reduce using rule 37 (stmt)


State 70

   31 stmt: block •

    $default  reduce using rule 31 (stmt)


State 71

   84 call_list: expr •
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112

    OR        [reduce using rule 84 (call_list)]
    AND       [reduce using rule 84 (call_list)]
    MULT      [reduce using rule 84 (call_list)]
    $default  reduce using rule 84 (call_list)


State 72

    6 function: DEF ID LPAREN par_list RPAREN COLON RETURNS • type $@1 stmt_list

    TYPE_INT       shift, and go to state 15
    TYPE_CHAR      shift, and go to state 16
    TYPE_REAL      shift, and go to state 17
    TYPE_BOOL      shift, and go to state 18
    TYPE_STRING    shift, and go to state 19
    TYPE_INT_PTR   shift, and go to state 20
    TYPE_CHAR_PTR  shift, and go to state 21
    TYPE_REAL_PTR  shift, and go to state 22

    type  go to state 113


State 73

   10 function: DEF ID LPAREN par_list RPAREN COLON $@3 • stmt_list

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt_list        go to state 114
    stmt             go to state 58
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 74

    8 function: DEF ID LPAREN RPAREN COLON RETURNS type $@2 • stmt_list

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt_list        go to state 115
    stmt             go to state 58
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 75

   42 assignment: MULT ID • ASSIGN expr SEMICOLON
  119 expr: MULT ID •

    ASSIGN  shift, and go to state 116

    $default  reduce using rule 119 (expr)


State 76

  119 expr: MULT • ID

    ID  shift, and go to state 117


State 77

  102 expr: ID • LBRACK expr RBRACK
  105     | ID •
  115     | ID • LPAREN call_args RPAREN

    LPAREN  shift, and go to state 81
    LBRACK  shift, and go to state 118

    LPAREN    [reduce using rule 105 (expr)]
    LBRACK    [reduce using rule 105 (expr)]
    $default  reduce using rule 105 (expr)


State 78

  114 expr: CALL • ID LPAREN call_args RPAREN

    ID  shift, and go to state 119


State 79

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr
  118     | NOT expr •

    $default  reduce using rule 118 (expr)


State 80

   40 assignment: ID ASSIGN • expr SEMICOLON
   85 assignment_call: ID ASSIGN • CALL ID LPAREN call_args RPAREN SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 120
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 121


State 81

  115 expr: ID LPAREN • call_args RPAREN

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $default  reduce using rule 82 (call_args)

    call_args  go to state 122
    call_list  go to state 67
    expr       go to state 71


State 82

   41 assignment: ID LBRACK • expr RBRACK ASSIGN expr SEMICOLON
  102 expr: ID LBRACK • expr RBRACK

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 123


State 83

   88 block: T_BEGIN $@5 • stmt_list T_END

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt_list        go to state 124
    stmt             go to state 58
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 84

   90 block: T_BEGIN $@6 • T_END

    T_END  shift, and go to state 125


State 85

   64 if_stmt: IF expr • COLON block ELSE COLON block
   65        | IF expr • COLON block
   66        | IF expr • COLON stmt
   67        | IF expr • COLON stmt ELSE COLON stmt
   68        | IF expr • COLON block elif_list ELSE COLON block
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112
    COLON  shift, and go to state 126


State 86

   71 while_stmt: WHILE COLON • expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 127


State 87

   72 while_stmt: WHILE expr • COLON block
   73           | WHILE expr • COLON stmt
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112
    COLON  shift, and go to state 128


State 88

   77 for_stmt: FOR LPAREN • assignment expr SEMICOLON update_expr RPAREN COLON block
   78         | FOR LPAREN • assignment expr SEMICOLON update_expr RPAREN COLON stmt

    MULT  shift, and go to state 129
    ID    shift, and go to state 130

    assignment  go to state 131


State 89

   74 do_while_stmt: DO COLON • stmt_list WHILE expr SEMICOLON
   75              | DO COLON • stmt WHILE expr SEMICOLON
   76              | DO COLON • block WHILE expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]

    func_list        go to state 56
    function         go to state 5
    stmt_list        go to state 132
    stmt             go to state 133
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 134
    expr             go to state 71


State 90

   86 void_call: CALL ID • LPAREN call_args RPAREN SEMICOLON
  114 expr: CALL ID • LPAREN call_args RPAREN

    LPAREN  shift, and go to state 135


State 91

   63 return_stmt: RETURN SEMICOLON •

    $default  reduce using rule 63 (return_stmt)


State 92

   62 return_stmt: RETURN expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 136


State 93

   47 type_decl: TYPE • TYPE_INT COLON ID SEMICOLON
   48          | TYPE • TYPE_BOOL COLON ID SEMICOLON
   49          | TYPE • TYPE_CHAR COLON ID SEMICOLON
   50          | TYPE • TYPE_STRING COLON ID SEMICOLON
   51          | TYPE • TYPE_REAL COLON ID SEMICOLON
   52          | TYPE • TYPE_REAL COLON ID COLON NUM SEMICOLON
   53          | TYPE • TYPE_INT COLON ID COLON NUM SEMICOLON
   54          | TYPE • TYPE_CHAR COLON ID COLON CHAR_LITERAL SEMICOLON
   55          | TYPE • TYPE_STRING COLON ID COLON STRING_LITERAL SEMICOLON
   56          | TYPE • TYPE_BOOL COLON ID COLON TRUE SEMICOLON
   57          | TYPE • TYPE_BOOL COLON ID COLON FALSE SEMICOLON
   58          | TYPE • TYPE_STRING COLON ID LBRACK NUM RBRACK SEMICOLON
   59          | TYPE • TYPE_INT_PTR COLON ID SEMICOLON
   60          | TYPE • TYPE_CHAR_PTR COLON ID SEMICOLON
   61          | TYPE • TYPE_REAL_PTR COLON ID SEMICOLON

    TYPE_INT       shift, and go to state 137
    TYPE_CHAR      shift, and go to state 138
    TYPE_REAL      shift, and go to state 139
    TYPE_BOOL      shift, and go to state 140
    TYPE_STRING    shift, and go to state 141
    TYPE_INT_PTR   shift, and go to state 142
    TYPE_CHAR_PTR  shift, and go to state 143
    TYPE_REAL_PTR  shift, and go to state 144


State 94

   43 var_stmt: VAR type_decls • block
   44         | VAR type_decls • stmt
   45 type_decls: type_decls • type_decl

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55
    TYPE            shift, and go to state 93

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 145
    assignment       go to state 59
    var_stmt         go to state 60
    type_decl        go to state 146
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 147
    expr             go to state 71


State 95

   46 type_decls: type_decl •

    $default  reduce using rule 46 (type_decls)


State 96

  120 expr: ADDRESS ID •

    $default  reduce using rule 120 (expr)


State 97

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  101     | LPAREN expr • RPAREN
  116     | expr • AND expr
  117     | expr • OR expr

    OR      shift, and go to state 101
    AND     shift, and go to state 102
    PLUS    shift, and go to state 103
    MINUS   shift, and go to state 104
    MULT    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    NE      shift, and go to state 108
    GT      shift, and go to state 109
    GE      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    RPAREN  shift, and go to state 148


State 98

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  103     | LBRACK expr • RBRACK
  116     | expr • AND expr
  117     | expr • OR expr

    OR      shift, and go to state 101
    AND     shift, and go to state 102
    PLUS    shift, and go to state 103
    MINUS   shift, and go to state 104
    MULT    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    NE      shift, and go to state 108
    GT      shift, and go to state 109
    GE      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    RBRACK  shift, and go to state 149


State 99

   26 stmt_list: stmt_list stmt •

    $default  reduce using rule 26 (stmt_list)


State 100

   83 call_list: call_list COMMA • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 150


State 101

  117 expr: expr OR • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 151


State 102

  116 expr: expr AND • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 152


State 103

   91 expr: expr PLUS • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 153


State 104

   92 expr: expr MINUS • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 154


State 105

   93 expr: expr MULT • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 155


State 106

   94 expr: expr DIV • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 156


State 107

   95 expr: expr EQ • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 157


State 108

   96 expr: expr NE • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 158


State 109

   98 expr: expr GT • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 159


State 110

  100 expr: expr GE • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 160


State 111

   97 expr: expr LT • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 161


State 112

   99 expr: expr LE • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 162


State 113

    6 function: DEF ID LPAREN par_list RPAREN COLON RETURNS type • $@1 stmt_list

    $default  reduce using rule 5 ($@1)

    $@1  go to state 163


State 114

   10 function: DEF ID LPAREN par_list RPAREN COLON $@3 stmt_list •
   26 stmt_list: stmt_list • stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $end            reduce using rule 10 (function)
    $end            [reduce using rule 82 (call_args)]
    OR              [reduce using rule 10 (function)]
    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 10 (function)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 10 (function)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 10 (function)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 10 (function)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 10 (function)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 10 (function)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 10 (function)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 10 (function)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 10 (function)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 10 (function)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 10 (function)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    T_END           reduce using rule 10 (function)
    T_END           [reduce using rule 82 (call_args)]
    IF              [reduce using rule 10 (function)]
    IF              [reduce using rule 82 (call_args)]
    ELSE            reduce using rule 10 (function)
    ELSE            [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 10 (function)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 10 (function)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 10 (function)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 10 (function)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 10 (function)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 10 (function)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 10 (function)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 10 (function)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 10 (function)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 10 (function)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 10 (function)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 99
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 115

    8 function: DEF ID LPAREN RPAREN COLON RETURNS type $@2 stmt_list •
   26 stmt_list: stmt_list • stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $end            reduce using rule 8 (function)
    $end            [reduce using rule 82 (call_args)]
    OR              [reduce using rule 8 (function)]
    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 8 (function)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 8 (function)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 8 (function)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 8 (function)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 8 (function)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 8 (function)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 8 (function)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 8 (function)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 8 (function)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 8 (function)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 8 (function)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    T_END           reduce using rule 8 (function)
    T_END           [reduce using rule 82 (call_args)]
    IF              [reduce using rule 8 (function)]
    IF              [reduce using rule 82 (call_args)]
    ELSE            reduce using rule 8 (function)
    ELSE            [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 8 (function)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 8 (function)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 8 (function)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 8 (function)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 8 (function)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 8 (function)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 8 (function)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 8 (function)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 8 (function)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 8 (function)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 8 (function)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 99
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 116

   42 assignment: MULT ID ASSIGN • expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 164


State 117

  119 expr: MULT ID •

    $default  reduce using rule 119 (expr)


State 118

  102 expr: ID LBRACK • expr RBRACK

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 165


State 119

  114 expr: CALL ID • LPAREN call_args RPAREN

    LPAREN  shift, and go to state 166


State 120

   85 assignment_call: ID ASSIGN CALL • ID LPAREN call_args RPAREN SEMICOLON
  114 expr: CALL • ID LPAREN call_args RPAREN

    ID  shift, and go to state 167


State 121

   40 assignment: ID ASSIGN expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 168


State 122

  115 expr: ID LPAREN call_args • RPAREN

    RPAREN  shift, and go to state 169


State 123

   41 assignment: ID LBRACK expr • RBRACK ASSIGN expr SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  102     | ID LBRACK expr • RBRACK
  116     | expr • AND expr
  117     | expr • OR expr

    OR      shift, and go to state 101
    AND     shift, and go to state 102
    PLUS    shift, and go to state 103
    MINUS   shift, and go to state 104
    MULT    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    NE      shift, and go to state 108
    GT      shift, and go to state 109
    GE      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    RBRACK  shift, and go to state 170


State 124

   26 stmt_list: stmt_list • stmt
   88 block: T_BEGIN $@5 stmt_list • T_END

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    T_END           shift, and go to state 171
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    T_END           [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 99
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 125

   90 block: T_BEGIN $@6 T_END •

    $default  reduce using rule 90 (block)


State 126

   64 if_stmt: IF expr COLON • block ELSE COLON block
   65        | IF expr COLON • block
   66        | IF expr COLON • stmt
   67        | IF expr COLON • stmt ELSE COLON stmt
   68        | IF expr COLON • block elif_list ELSE COLON block

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 172
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 173
    expr             go to state 71


State 127

   71 while_stmt: WHILE COLON expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 174


State 128

   72 while_stmt: WHILE expr COLON • block
   73           | WHILE expr COLON • stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 175
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 176
    expr             go to state 71


State 129

   42 assignment: MULT • ID ASSIGN expr SEMICOLON

    ID  shift, and go to state 177


State 130

   40 assignment: ID • ASSIGN expr SEMICOLON
   41           | ID • LBRACK expr RBRACK ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 178
    LBRACK  shift, and go to state 179


State 131

   77 for_stmt: FOR LPAREN assignment • expr SEMICOLON update_expr RPAREN COLON block
   78         | FOR LPAREN assignment • expr SEMICOLON update_expr RPAREN COLON stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 180


State 132

   26 stmt_list: stmt_list • stmt
   74 do_while_stmt: DO COLON stmt_list • WHILE expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 181
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 99
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 133

   27 stmt_list: stmt •
   75 do_while_stmt: DO COLON stmt • WHILE expr SEMICOLON

    WHILE  shift, and go to state 182

    WHILE     [reduce using rule 27 (stmt_list)]
    $default  reduce using rule 27 (stmt_list)


State 134

   31 stmt: block •
   76 do_while_stmt: DO COLON block • WHILE expr SEMICOLON

    WHILE  shift, and go to state 183

    WHILE     [reduce using rule 31 (stmt)]
    $default  reduce using rule 31 (stmt)


State 135

   86 void_call: CALL ID LPAREN • call_args RPAREN SEMICOLON
  114 expr: CALL ID LPAREN • call_args RPAREN

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $default  reduce using rule 82 (call_args)

    call_args  go to state 184
    call_list  go to state 67
    expr       go to state 71


State 136

   62 return_stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 62 (return_stmt)


State 137

   47 type_decl: TYPE TYPE_INT • COLON ID SEMICOLON
   53          | TYPE TYPE_INT • COLON ID COLON NUM SEMICOLON

    COLON  shift, and go to state 185


State 138

   49 type_decl: TYPE TYPE_CHAR • COLON ID SEMICOLON
   54          | TYPE TYPE_CHAR • COLON ID COLON CHAR_LITERAL SEMICOLON

    COLON  shift, and go to state 186


State 139

   51 type_decl: TYPE TYPE_REAL • COLON ID SEMICOLON
   52          | TYPE TYPE_REAL • COLON ID COLON NUM SEMICOLON

    COLON  shift, and go to state 187


State 140

   48 type_decl: TYPE TYPE_BOOL • COLON ID SEMICOLON
   56          | TYPE TYPE_BOOL • COLON ID COLON TRUE SEMICOLON
   57          | TYPE TYPE_BOOL • COLON ID COLON FALSE SEMICOLON

    COLON  shift, and go to state 188


State 141

   50 type_decl: TYPE TYPE_STRING • COLON ID SEMICOLON
   55          | TYPE TYPE_STRING • COLON ID COLON STRING_LITERAL SEMICOLON
   58          | TYPE TYPE_STRING • COLON ID LBRACK NUM RBRACK SEMICOLON

    COLON  shift, and go to state 189


State 142

   59 type_decl: TYPE TYPE_INT_PTR • COLON ID SEMICOLON

    COLON  shift, and go to state 190


State 143

   60 type_decl: TYPE TYPE_CHAR_PTR • COLON ID SEMICOLON

    COLON  shift, and go to state 191


State 144

   61 type_decl: TYPE TYPE_REAL_PTR • COLON ID SEMICOLON

    COLON  shift, and go to state 192


State 145

   44 var_stmt: VAR type_decls stmt •

    $default  reduce using rule 44 (var_stmt)


State 146

   45 type_decls: type_decls type_decl •

    $default  reduce using rule 45 (type_decls)


State 147

   31 stmt: block •
   43 var_stmt: VAR type_decls block •

    $end            reduce using rule 31 (stmt)
    $end            [reduce using rule 43 (var_stmt)]
    OR              reduce using rule 31 (stmt)
    OR              [reduce using rule 43 (var_stmt)]
    AND             reduce using rule 31 (stmt)
    AND             [reduce using rule 43 (var_stmt)]
    MULT            reduce using rule 31 (stmt)
    MULT            [reduce using rule 43 (var_stmt)]
    NOT             reduce using rule 31 (stmt)
    NOT             [reduce using rule 43 (var_stmt)]
    ID              reduce using rule 31 (stmt)
    ID              [reduce using rule 43 (var_stmt)]
    CHAR_LITERAL    reduce using rule 31 (stmt)
    CHAR_LITERAL    [reduce using rule 43 (var_stmt)]
    STRING_LITERAL  reduce using rule 31 (stmt)
    STRING_LITERAL  [reduce using rule 43 (var_stmt)]
    NUM             reduce using rule 31 (stmt)
    NUM             [reduce using rule 43 (var_stmt)]
    TRUE            reduce using rule 31 (stmt)
    TRUE            [reduce using rule 43 (var_stmt)]
    FALSE           reduce using rule 31 (stmt)
    FALSE           [reduce using rule 43 (var_stmt)]
    DEF             reduce using rule 31 (stmt)
    DEF             [reduce using rule 43 (var_stmt)]
    T_BEGIN         reduce using rule 31 (stmt)
    T_BEGIN         [reduce using rule 43 (var_stmt)]
    T_END           reduce using rule 31 (stmt)
    T_END           [reduce using rule 43 (var_stmt)]
    IF              reduce using rule 31 (stmt)
    IF              [reduce using rule 43 (var_stmt)]
    ELSE            reduce using rule 31 (stmt)
    ELSE            [reduce using rule 43 (var_stmt)]
    WHILE           reduce using rule 31 (stmt)
    WHILE           [reduce using rule 43 (var_stmt)]
    FOR             reduce using rule 31 (stmt)
    FOR             [reduce using rule 43 (var_stmt)]
    DO              reduce using rule 31 (stmt)
    DO              [reduce using rule 43 (var_stmt)]
    CALL            reduce using rule 31 (stmt)
    CALL            [reduce using rule 43 (var_stmt)]
    RETURN          reduce using rule 31 (stmt)
    RETURN          [reduce using rule 43 (var_stmt)]
    VAR             reduce using rule 31 (stmt)
    VAR             [reduce using rule 43 (var_stmt)]
    NULLPTR         reduce using rule 31 (stmt)
    NULLPTR         [reduce using rule 43 (var_stmt)]
    ADDRESS         reduce using rule 31 (stmt)
    ADDRESS         [reduce using rule 43 (var_stmt)]
    LPAREN          reduce using rule 31 (stmt)
    LPAREN          [reduce using rule 43 (var_stmt)]
    LBRACK          reduce using rule 31 (stmt)
    LBRACK          [reduce using rule 43 (var_stmt)]
    $default        reduce using rule 31 (stmt)


State 148

  101 expr: LPAREN expr RPAREN •

    $default  reduce using rule 101 (expr)


State 149

  103 expr: LBRACK expr RBRACK •

    $default  reduce using rule 103 (expr)


State 150

   83 call_list: call_list COMMA expr •
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112

    OR        [reduce using rule 83 (call_list)]
    AND       [reduce using rule 83 (call_list)]
    MULT      [reduce using rule 83 (call_list)]
    $default  reduce using rule 83 (call_list)


State 151

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr
  117     | expr OR expr •

    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112

    $default  reduce using rule 117 (expr)


State 152

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  116     | expr AND expr •
  117     | expr • OR expr

    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112

    $default  reduce using rule 116 (expr)


State 153

   91 expr: expr • PLUS expr
   91     | expr PLUS expr •
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    MULT  shift, and go to state 105
    DIV   shift, and go to state 106
    EQ    shift, and go to state 107
    NE    shift, and go to state 108
    GT    shift, and go to state 109
    GE    shift, and go to state 110
    LT    shift, and go to state 111
    LE    shift, and go to state 112

    $default  reduce using rule 91 (expr)


State 154

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   92     | expr MINUS expr •
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    MULT  shift, and go to state 105
    DIV   shift, and go to state 106
    EQ    shift, and go to state 107
    NE    shift, and go to state 108
    GT    shift, and go to state 109
    GE    shift, and go to state 110
    LT    shift, and go to state 111
    LE    shift, and go to state 112

    $default  reduce using rule 92 (expr)


State 155

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   93     | expr MULT expr •
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    EQ  shift, and go to state 107
    NE  shift, and go to state 108
    GT  shift, and go to state 109
    GE  shift, and go to state 110
    LT  shift, and go to state 111
    LE  shift, and go to state 112

    $default  reduce using rule 93 (expr)


State 156

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   94     | expr DIV expr •
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    EQ  shift, and go to state 107
    NE  shift, and go to state 108
    GT  shift, and go to state 109
    GE  shift, and go to state 110
    LT  shift, and go to state 111
    LE  shift, and go to state 112

    $default  reduce using rule 94 (expr)


State 157

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   95     | expr EQ expr •
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    $default  reduce using rule 95 (expr)


State 158

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   96     | expr NE expr •
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    $default  reduce using rule 96 (expr)


State 159

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   98     | expr GT expr •
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    $default  reduce using rule 98 (expr)


State 160

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  100     | expr GE expr •
  116     | expr • AND expr
  117     | expr • OR expr

    $default  reduce using rule 100 (expr)


State 161

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   97     | expr LT expr •
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    $default  reduce using rule 97 (expr)


State 162

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
   99     | expr LE expr •
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    $default  reduce using rule 99 (expr)


State 163

    6 function: DEF ID LPAREN par_list RPAREN COLON RETURNS type $@1 • stmt_list

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt_list        go to state 193
    stmt             go to state 58
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 164

   42 assignment: MULT ID ASSIGN expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 194


State 165

   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  102     | ID LBRACK expr • RBRACK
  116     | expr • AND expr
  117     | expr • OR expr

    OR      shift, and go to state 101
    AND     shift, and go to state 102
    PLUS    shift, and go to state 103
    MINUS   shift, and go to state 104
    MULT    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    NE      shift, and go to state 108
    GT      shift, and go to state 109
    GE      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    RBRACK  shift, and go to state 195


State 166

  114 expr: CALL ID LPAREN • call_args RPAREN

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $default  reduce using rule 82 (call_args)

    call_args  go to state 196
    call_list  go to state 67
    expr       go to state 71


State 167

   85 assignment_call: ID ASSIGN CALL ID • LPAREN call_args RPAREN SEMICOLON
  114 expr: CALL ID • LPAREN call_args RPAREN

    LPAREN  shift, and go to state 197


State 168

   40 assignment: ID ASSIGN expr SEMICOLON •

    $default  reduce using rule 40 (assignment)


State 169

  115 expr: ID LPAREN call_args RPAREN •

    $default  reduce using rule 115 (expr)


State 170

   41 assignment: ID LBRACK expr RBRACK • ASSIGN expr SEMICOLON
  102 expr: ID LBRACK expr RBRACK •

    ASSIGN  shift, and go to state 198

    $default  reduce using rule 102 (expr)


State 171

   88 block: T_BEGIN $@5 stmt_list T_END •

    $default  reduce using rule 88 (block)


State 172

   66 if_stmt: IF expr COLON stmt •
   67        | IF expr COLON stmt • ELSE COLON stmt

    ELSE  shift, and go to state 199

    ELSE      [reduce using rule 66 (if_stmt)]
    $default  reduce using rule 66 (if_stmt)


State 173

   31 stmt: block •
   64 if_stmt: IF expr COLON block • ELSE COLON block
   65        | IF expr COLON block •
   68        | IF expr COLON block • elif_list ELSE COLON block

    ELSE  shift, and go to state 200
    ELIF  shift, and go to state 201

    $end            reduce using rule 31 (stmt)
    $end            [reduce using rule 65 (if_stmt)]
    OR              reduce using rule 31 (stmt)
    OR              [reduce using rule 65 (if_stmt)]
    AND             reduce using rule 31 (stmt)
    AND             [reduce using rule 65 (if_stmt)]
    MULT            reduce using rule 31 (stmt)
    MULT            [reduce using rule 65 (if_stmt)]
    NOT             reduce using rule 31 (stmt)
    NOT             [reduce using rule 65 (if_stmt)]
    ID              reduce using rule 31 (stmt)
    ID              [reduce using rule 65 (if_stmt)]
    CHAR_LITERAL    reduce using rule 31 (stmt)
    CHAR_LITERAL    [reduce using rule 65 (if_stmt)]
    STRING_LITERAL  reduce using rule 31 (stmt)
    STRING_LITERAL  [reduce using rule 65 (if_stmt)]
    NUM             reduce using rule 31 (stmt)
    NUM             [reduce using rule 65 (if_stmt)]
    TRUE            reduce using rule 31 (stmt)
    TRUE            [reduce using rule 65 (if_stmt)]
    FALSE           reduce using rule 31 (stmt)
    FALSE           [reduce using rule 65 (if_stmt)]
    DEF             reduce using rule 31 (stmt)
    DEF             [reduce using rule 65 (if_stmt)]
    T_BEGIN         reduce using rule 31 (stmt)
    T_BEGIN         [reduce using rule 65 (if_stmt)]
    T_END           reduce using rule 31 (stmt)
    T_END           [reduce using rule 65 (if_stmt)]
    IF              reduce using rule 31 (stmt)
    IF              [reduce using rule 65 (if_stmt)]
    ELSE            [reduce using rule 31 (stmt)]
    ELSE            [reduce using rule 65 (if_stmt)]
    WHILE           reduce using rule 31 (stmt)
    WHILE           [reduce using rule 65 (if_stmt)]
    FOR             reduce using rule 31 (stmt)
    FOR             [reduce using rule 65 (if_stmt)]
    DO              reduce using rule 31 (stmt)
    DO              [reduce using rule 65 (if_stmt)]
    CALL            reduce using rule 31 (stmt)
    CALL            [reduce using rule 65 (if_stmt)]
    RETURN          reduce using rule 31 (stmt)
    RETURN          [reduce using rule 65 (if_stmt)]
    VAR             reduce using rule 31 (stmt)
    VAR             [reduce using rule 65 (if_stmt)]
    NULLPTR         reduce using rule 31 (stmt)
    NULLPTR         [reduce using rule 65 (if_stmt)]
    ADDRESS         reduce using rule 31 (stmt)
    ADDRESS         [reduce using rule 65 (if_stmt)]
    LPAREN          reduce using rule 31 (stmt)
    LPAREN          [reduce using rule 65 (if_stmt)]
    LBRACK          reduce using rule 31 (stmt)
    LBRACK          [reduce using rule 65 (if_stmt)]
    $default        reduce using rule 31 (stmt)

    elif_list  go to state 202


State 174

   71 while_stmt: WHILE COLON expr SEMICOLON •

    $default  reduce using rule 71 (while_stmt)


State 175

   73 while_stmt: WHILE expr COLON stmt •

    $default  reduce using rule 73 (while_stmt)


State 176

   31 stmt: block •
   72 while_stmt: WHILE expr COLON block •

    $end            reduce using rule 31 (stmt)
    $end            [reduce using rule 72 (while_stmt)]
    OR              reduce using rule 31 (stmt)
    OR              [reduce using rule 72 (while_stmt)]
    AND             reduce using rule 31 (stmt)
    AND             [reduce using rule 72 (while_stmt)]
    MULT            reduce using rule 31 (stmt)
    MULT            [reduce using rule 72 (while_stmt)]
    NOT             reduce using rule 31 (stmt)
    NOT             [reduce using rule 72 (while_stmt)]
    ID              reduce using rule 31 (stmt)
    ID              [reduce using rule 72 (while_stmt)]
    CHAR_LITERAL    reduce using rule 31 (stmt)
    CHAR_LITERAL    [reduce using rule 72 (while_stmt)]
    STRING_LITERAL  reduce using rule 31 (stmt)
    STRING_LITERAL  [reduce using rule 72 (while_stmt)]
    NUM             reduce using rule 31 (stmt)
    NUM             [reduce using rule 72 (while_stmt)]
    TRUE            reduce using rule 31 (stmt)
    TRUE            [reduce using rule 72 (while_stmt)]
    FALSE           reduce using rule 31 (stmt)
    FALSE           [reduce using rule 72 (while_stmt)]
    DEF             reduce using rule 31 (stmt)
    DEF             [reduce using rule 72 (while_stmt)]
    T_BEGIN         reduce using rule 31 (stmt)
    T_BEGIN         [reduce using rule 72 (while_stmt)]
    T_END           reduce using rule 31 (stmt)
    T_END           [reduce using rule 72 (while_stmt)]
    IF              reduce using rule 31 (stmt)
    IF              [reduce using rule 72 (while_stmt)]
    ELSE            reduce using rule 31 (stmt)
    ELSE            [reduce using rule 72 (while_stmt)]
    WHILE           reduce using rule 31 (stmt)
    WHILE           [reduce using rule 72 (while_stmt)]
    FOR             reduce using rule 31 (stmt)
    FOR             [reduce using rule 72 (while_stmt)]
    DO              reduce using rule 31 (stmt)
    DO              [reduce using rule 72 (while_stmt)]
    CALL            reduce using rule 31 (stmt)
    CALL            [reduce using rule 72 (while_stmt)]
    RETURN          reduce using rule 31 (stmt)
    RETURN          [reduce using rule 72 (while_stmt)]
    VAR             reduce using rule 31 (stmt)
    VAR             [reduce using rule 72 (while_stmt)]
    NULLPTR         reduce using rule 31 (stmt)
    NULLPTR         [reduce using rule 72 (while_stmt)]
    ADDRESS         reduce using rule 31 (stmt)
    ADDRESS         [reduce using rule 72 (while_stmt)]
    LPAREN          reduce using rule 31 (stmt)
    LPAREN          [reduce using rule 72 (while_stmt)]
    LBRACK          reduce using rule 31 (stmt)
    LBRACK          [reduce using rule 72 (while_stmt)]
    $default        reduce using rule 31 (stmt)


State 177

   42 assignment: MULT ID • ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 116


State 178

   40 assignment: ID ASSIGN • expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 121


State 179

   41 assignment: ID LBRACK • expr RBRACK ASSIGN expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 203


State 180

   77 for_stmt: FOR LPAREN assignment expr • SEMICOLON update_expr RPAREN COLON block
   78         | FOR LPAREN assignment expr • SEMICOLON update_expr RPAREN COLON stmt
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 204


State 181

   71 while_stmt: WHILE • COLON expr SEMICOLON
   72           | WHILE • expr COLON block
   73           | WHILE • expr COLON stmt
   74 do_while_stmt: DO COLON stmt_list WHILE • expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    COLON           shift, and go to state 86
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 205


State 182

   75 do_while_stmt: DO COLON stmt WHILE • expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 206


State 183

   76 do_while_stmt: DO COLON block WHILE • expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 207


State 184

   86 void_call: CALL ID LPAREN call_args • RPAREN SEMICOLON
  114 expr: CALL ID LPAREN call_args • RPAREN

    RPAREN  shift, and go to state 208


State 185

   47 type_decl: TYPE TYPE_INT COLON • ID SEMICOLON
   53          | TYPE TYPE_INT COLON • ID COLON NUM SEMICOLON

    ID  shift, and go to state 209


State 186

   49 type_decl: TYPE TYPE_CHAR COLON • ID SEMICOLON
   54          | TYPE TYPE_CHAR COLON • ID COLON CHAR_LITERAL SEMICOLON

    ID  shift, and go to state 210


State 187

   51 type_decl: TYPE TYPE_REAL COLON • ID SEMICOLON
   52          | TYPE TYPE_REAL COLON • ID COLON NUM SEMICOLON

    ID  shift, and go to state 211


State 188

   48 type_decl: TYPE TYPE_BOOL COLON • ID SEMICOLON
   56          | TYPE TYPE_BOOL COLON • ID COLON TRUE SEMICOLON
   57          | TYPE TYPE_BOOL COLON • ID COLON FALSE SEMICOLON

    ID  shift, and go to state 212


State 189

   50 type_decl: TYPE TYPE_STRING COLON • ID SEMICOLON
   55          | TYPE TYPE_STRING COLON • ID COLON STRING_LITERAL SEMICOLON
   58          | TYPE TYPE_STRING COLON • ID LBRACK NUM RBRACK SEMICOLON

    ID  shift, and go to state 213


State 190

   59 type_decl: TYPE TYPE_INT_PTR COLON • ID SEMICOLON

    ID  shift, and go to state 214


State 191

   60 type_decl: TYPE TYPE_CHAR_PTR COLON • ID SEMICOLON

    ID  shift, and go to state 215


State 192

   61 type_decl: TYPE TYPE_REAL_PTR COLON • ID SEMICOLON

    ID  shift, and go to state 216


State 193

    6 function: DEF ID LPAREN par_list RPAREN COLON RETURNS type $@1 stmt_list •
   26 stmt_list: stmt_list • stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $end            reduce using rule 6 (function)
    $end            [reduce using rule 82 (call_args)]
    OR              [reduce using rule 6 (function)]
    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 6 (function)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 6 (function)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 6 (function)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 6 (function)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 6 (function)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 6 (function)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 6 (function)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 6 (function)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 6 (function)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 6 (function)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 6 (function)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    T_END           reduce using rule 6 (function)
    T_END           [reduce using rule 82 (call_args)]
    IF              [reduce using rule 6 (function)]
    IF              [reduce using rule 82 (call_args)]
    ELSE            reduce using rule 6 (function)
    ELSE            [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 6 (function)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 6 (function)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 6 (function)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 6 (function)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 6 (function)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 6 (function)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 6 (function)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 6 (function)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 6 (function)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 6 (function)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 6 (function)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 99
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 194

   42 assignment: MULT ID ASSIGN expr SEMICOLON •

    $default  reduce using rule 42 (assignment)


State 195

  102 expr: ID LBRACK expr RBRACK •

    $default  reduce using rule 102 (expr)


State 196

  114 expr: CALL ID LPAREN call_args • RPAREN

    RPAREN  shift, and go to state 217


State 197

   85 assignment_call: ID ASSIGN CALL ID LPAREN • call_args RPAREN SEMICOLON
  114 expr: CALL ID LPAREN • call_args RPAREN

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    $default  reduce using rule 82 (call_args)

    call_args  go to state 218
    call_list  go to state 67
    expr       go to state 71


State 198

   41 assignment: ID LBRACK expr RBRACK ASSIGN • expr SEMICOLON

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 219


State 199

   67 if_stmt: IF expr COLON stmt ELSE • COLON stmt

    COLON  shift, and go to state 220


State 200

   64 if_stmt: IF expr COLON block ELSE • COLON block

    COLON  shift, and go to state 221


State 201

   69 elif_list: ELIF • expr COLON block

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 222


State 202

   68 if_stmt: IF expr COLON block elif_list • ELSE COLON block
   70 elif_list: elif_list • ELIF expr COLON block

    ELSE  shift, and go to state 223
    ELIF  shift, and go to state 224


State 203

   41 assignment: ID LBRACK expr • RBRACK ASSIGN expr SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR      shift, and go to state 101
    AND     shift, and go to state 102
    PLUS    shift, and go to state 103
    MINUS   shift, and go to state 104
    MULT    shift, and go to state 105
    DIV     shift, and go to state 106
    EQ      shift, and go to state 107
    NE      shift, and go to state 108
    GT      shift, and go to state 109
    GE      shift, and go to state 110
    LT      shift, and go to state 111
    LE      shift, and go to state 112
    RBRACK  shift, and go to state 225


State 204

   77 for_stmt: FOR LPAREN assignment expr SEMICOLON • update_expr RPAREN COLON block
   78         | FOR LPAREN assignment expr SEMICOLON • update_expr RPAREN COLON stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 226
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    update_expr  go to state 227
    expr         go to state 228


State 205

   72 while_stmt: WHILE expr • COLON block
   73           | WHILE expr • COLON stmt
   74 do_while_stmt: DO COLON stmt_list WHILE expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    COLON      shift, and go to state 128
    SEMICOLON  shift, and go to state 229


State 206

   75 do_while_stmt: DO COLON stmt WHILE expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 230


State 207

   76 do_while_stmt: DO COLON block WHILE expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 231


State 208

   86 void_call: CALL ID LPAREN call_args RPAREN • SEMICOLON
  114 expr: CALL ID LPAREN call_args RPAREN •

    SEMICOLON  shift, and go to state 232

    $default  reduce using rule 114 (expr)


State 209

   47 type_decl: TYPE TYPE_INT COLON ID • SEMICOLON
   53          | TYPE TYPE_INT COLON ID • COLON NUM SEMICOLON

    COLON      shift, and go to state 233
    SEMICOLON  shift, and go to state 234


State 210

   49 type_decl: TYPE TYPE_CHAR COLON ID • SEMICOLON
   54          | TYPE TYPE_CHAR COLON ID • COLON CHAR_LITERAL SEMICOLON

    COLON      shift, and go to state 235
    SEMICOLON  shift, and go to state 236


State 211

   51 type_decl: TYPE TYPE_REAL COLON ID • SEMICOLON
   52          | TYPE TYPE_REAL COLON ID • COLON NUM SEMICOLON

    COLON      shift, and go to state 237
    SEMICOLON  shift, and go to state 238


State 212

   48 type_decl: TYPE TYPE_BOOL COLON ID • SEMICOLON
   56          | TYPE TYPE_BOOL COLON ID • COLON TRUE SEMICOLON
   57          | TYPE TYPE_BOOL COLON ID • COLON FALSE SEMICOLON

    COLON      shift, and go to state 239
    SEMICOLON  shift, and go to state 240


State 213

   50 type_decl: TYPE TYPE_STRING COLON ID • SEMICOLON
   55          | TYPE TYPE_STRING COLON ID • COLON STRING_LITERAL SEMICOLON
   58          | TYPE TYPE_STRING COLON ID • LBRACK NUM RBRACK SEMICOLON

    COLON      shift, and go to state 241
    SEMICOLON  shift, and go to state 242
    LBRACK     shift, and go to state 243


State 214

   59 type_decl: TYPE TYPE_INT_PTR COLON ID • SEMICOLON

    SEMICOLON  shift, and go to state 244


State 215

   60 type_decl: TYPE TYPE_CHAR_PTR COLON ID • SEMICOLON

    SEMICOLON  shift, and go to state 245


State 216

   61 type_decl: TYPE TYPE_REAL_PTR COLON ID • SEMICOLON

    SEMICOLON  shift, and go to state 246


State 217

  114 expr: CALL ID LPAREN call_args RPAREN •

    $default  reduce using rule 114 (expr)


State 218

   85 assignment_call: ID ASSIGN CALL ID LPAREN call_args • RPAREN SEMICOLON
  114 expr: CALL ID LPAREN call_args • RPAREN

    RPAREN  shift, and go to state 247


State 219

   41 assignment: ID LBRACK expr RBRACK ASSIGN expr • SEMICOLON
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR         shift, and go to state 101
    AND        shift, and go to state 102
    PLUS       shift, and go to state 103
    MINUS      shift, and go to state 104
    MULT       shift, and go to state 105
    DIV        shift, and go to state 106
    EQ         shift, and go to state 107
    NE         shift, and go to state 108
    GT         shift, and go to state 109
    GE         shift, and go to state 110
    LT         shift, and go to state 111
    LE         shift, and go to state 112
    SEMICOLON  shift, and go to state 248


State 220

   67 if_stmt: IF expr COLON stmt ELSE COLON • stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 249
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 70
    expr             go to state 71


State 221

   64 if_stmt: IF expr COLON block ELSE COLON • block

    T_BEGIN  shift, and go to state 44

    block  go to state 250


State 222

   69 elif_list: ELIF expr • COLON block
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112
    COLON  shift, and go to state 251


State 223

   68 if_stmt: IF expr COLON block elif_list ELSE • COLON block

    COLON  shift, and go to state 252


State 224

   70 elif_list: elif_list ELIF • expr COLON block

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 253


State 225

   41 assignment: ID LBRACK expr RBRACK • ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 198


State 226

   79 update_expr: ID • ASSIGN expr
  102 expr: ID • LBRACK expr RBRACK
  105     | ID •
  115     | ID • LPAREN call_args RPAREN

    ASSIGN  shift, and go to state 254
    LPAREN  shift, and go to state 81
    LBRACK  shift, and go to state 118

    $default  reduce using rule 105 (expr)


State 227

   77 for_stmt: FOR LPAREN assignment expr SEMICOLON update_expr • RPAREN COLON block
   78         | FOR LPAREN assignment expr SEMICOLON update_expr • RPAREN COLON stmt

    RPAREN  shift, and go to state 255


State 228

   80 update_expr: expr •
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112

    $default  reduce using rule 80 (update_expr)


State 229

   74 do_while_stmt: DO COLON stmt_list WHILE expr SEMICOLON •

    $default  reduce using rule 74 (do_while_stmt)


State 230

   75 do_while_stmt: DO COLON stmt WHILE expr SEMICOLON •

    $default  reduce using rule 75 (do_while_stmt)


State 231

   76 do_while_stmt: DO COLON block WHILE expr SEMICOLON •

    $default  reduce using rule 76 (do_while_stmt)


State 232

   86 void_call: CALL ID LPAREN call_args RPAREN SEMICOLON •

    $default  reduce using rule 86 (void_call)


State 233

   53 type_decl: TYPE TYPE_INT COLON ID COLON • NUM SEMICOLON

    NUM  shift, and go to state 256


State 234

   47 type_decl: TYPE TYPE_INT COLON ID SEMICOLON •

    $default  reduce using rule 47 (type_decl)


State 235

   54 type_decl: TYPE TYPE_CHAR COLON ID COLON • CHAR_LITERAL SEMICOLON

    CHAR_LITERAL  shift, and go to state 257


State 236

   49 type_decl: TYPE TYPE_CHAR COLON ID SEMICOLON •

    $default  reduce using rule 49 (type_decl)


State 237

   52 type_decl: TYPE TYPE_REAL COLON ID COLON • NUM SEMICOLON

    NUM  shift, and go to state 258


State 238

   51 type_decl: TYPE TYPE_REAL COLON ID SEMICOLON •

    $default  reduce using rule 51 (type_decl)


State 239

   56 type_decl: TYPE TYPE_BOOL COLON ID COLON • TRUE SEMICOLON
   57          | TYPE TYPE_BOOL COLON ID COLON • FALSE SEMICOLON

    TRUE   shift, and go to state 259
    FALSE  shift, and go to state 260


State 240

   48 type_decl: TYPE TYPE_BOOL COLON ID SEMICOLON •

    $default  reduce using rule 48 (type_decl)


State 241

   55 type_decl: TYPE TYPE_STRING COLON ID COLON • STRING_LITERAL SEMICOLON

    STRING_LITERAL  shift, and go to state 261


State 242

   50 type_decl: TYPE TYPE_STRING COLON ID SEMICOLON •

    $default  reduce using rule 50 (type_decl)


State 243

   58 type_decl: TYPE TYPE_STRING COLON ID LBRACK • NUM RBRACK SEMICOLON

    NUM  shift, and go to state 262


State 244

   59 type_decl: TYPE TYPE_INT_PTR COLON ID SEMICOLON •

    $default  reduce using rule 59 (type_decl)


State 245

   60 type_decl: TYPE TYPE_CHAR_PTR COLON ID SEMICOLON •

    $default  reduce using rule 60 (type_decl)


State 246

   61 type_decl: TYPE TYPE_REAL_PTR COLON ID SEMICOLON •

    $default  reduce using rule 61 (type_decl)


State 247

   85 assignment_call: ID ASSIGN CALL ID LPAREN call_args RPAREN • SEMICOLON
  114 expr: CALL ID LPAREN call_args RPAREN •

    SEMICOLON  shift, and go to state 263

    SEMICOLON  [reduce using rule 114 (expr)]
    $default   reduce using rule 114 (expr)


State 248

   41 assignment: ID LBRACK expr RBRACK ASSIGN expr SEMICOLON •

    $default  reduce using rule 41 (assignment)


State 249

   67 if_stmt: IF expr COLON stmt ELSE COLON stmt •

    $default  reduce using rule 67 (if_stmt)


State 250

   64 if_stmt: IF expr COLON block ELSE COLON block •

    $default  reduce using rule 64 (if_stmt)


State 251

   69 elif_list: ELIF expr COLON • block

    T_BEGIN  shift, and go to state 44

    block  go to state 264


State 252

   68 if_stmt: IF expr COLON block elif_list ELSE COLON • block

    T_BEGIN  shift, and go to state 44

    block  go to state 265


State 253

   70 elif_list: elif_list ELIF expr • COLON block
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112
    COLON  shift, and go to state 266


State 254

   79 update_expr: ID ASSIGN • expr

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 76
    NOT             shift, and go to state 37
    ID              shift, and go to state 77
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    CALL            shift, and go to state 78
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    expr  go to state 267


State 255

   77 for_stmt: FOR LPAREN assignment expr SEMICOLON update_expr RPAREN • COLON block
   78         | FOR LPAREN assignment expr SEMICOLON update_expr RPAREN • COLON stmt

    COLON  shift, and go to state 268


State 256

   53 type_decl: TYPE TYPE_INT COLON ID COLON NUM • SEMICOLON

    SEMICOLON  shift, and go to state 269


State 257

   54 type_decl: TYPE TYPE_CHAR COLON ID COLON CHAR_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 270


State 258

   52 type_decl: TYPE TYPE_REAL COLON ID COLON NUM • SEMICOLON

    SEMICOLON  shift, and go to state 271


State 259

   56 type_decl: TYPE TYPE_BOOL COLON ID COLON TRUE • SEMICOLON

    SEMICOLON  shift, and go to state 272


State 260

   57 type_decl: TYPE TYPE_BOOL COLON ID COLON FALSE • SEMICOLON

    SEMICOLON  shift, and go to state 273


State 261

   55 type_decl: TYPE TYPE_STRING COLON ID COLON STRING_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 274


State 262

   58 type_decl: TYPE TYPE_STRING COLON ID LBRACK NUM • RBRACK SEMICOLON

    RBRACK  shift, and go to state 275


State 263

   85 assignment_call: ID ASSIGN CALL ID LPAREN call_args RPAREN SEMICOLON •

    $default  reduce using rule 85 (assignment_call)


State 264

   69 elif_list: ELIF expr COLON block •

    $default  reduce using rule 69 (elif_list)


State 265

   68 if_stmt: IF expr COLON block elif_list ELSE COLON block •

    $default  reduce using rule 68 (if_stmt)


State 266

   70 elif_list: elif_list ELIF expr COLON • block

    T_BEGIN  shift, and go to state 44

    block  go to state 276


State 267

   79 update_expr: ID ASSIGN expr •
   91 expr: expr • PLUS expr
   92     | expr • MINUS expr
   93     | expr • MULT expr
   94     | expr • DIV expr
   95     | expr • EQ expr
   96     | expr • NE expr
   97     | expr • LT expr
   98     | expr • GT expr
   99     | expr • LE expr
  100     | expr • GE expr
  116     | expr • AND expr
  117     | expr • OR expr

    OR     shift, and go to state 101
    AND    shift, and go to state 102
    PLUS   shift, and go to state 103
    MINUS  shift, and go to state 104
    MULT   shift, and go to state 105
    DIV    shift, and go to state 106
    EQ     shift, and go to state 107
    NE     shift, and go to state 108
    GT     shift, and go to state 109
    GE     shift, and go to state 110
    LT     shift, and go to state 111
    LE     shift, and go to state 112

    $default  reduce using rule 79 (update_expr)


State 268

   77 for_stmt: FOR LPAREN assignment expr SEMICOLON update_expr RPAREN COLON • block
   78         | FOR LPAREN assignment expr SEMICOLON update_expr RPAREN COLON • stmt

    OR              shift, and go to state 34
    AND             shift, and go to state 35
    MULT            shift, and go to state 36
    NOT             shift, and go to state 37
    ID              shift, and go to state 38
    CHAR_LITERAL    shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    NUM             shift, and go to state 41
    TRUE            shift, and go to state 42
    FALSE           shift, and go to state 43
    DEF             shift, and go to state 2
    T_BEGIN         shift, and go to state 44
    IF              shift, and go to state 45
    WHILE           shift, and go to state 46
    FOR             shift, and go to state 47
    DO              shift, and go to state 48
    CALL            shift, and go to state 49
    RETURN          shift, and go to state 50
    VAR             shift, and go to state 51
    NULLPTR         shift, and go to state 52
    ADDRESS         shift, and go to state 53
    LPAREN          shift, and go to state 54
    LBRACK          shift, and go to state 55

    OR              [reduce using rule 82 (call_args)]
    AND             [reduce using rule 82 (call_args)]
    MULT            [reduce using rule 82 (call_args)]
    NOT             [reduce using rule 82 (call_args)]
    ID              [reduce using rule 82 (call_args)]
    CHAR_LITERAL    [reduce using rule 82 (call_args)]
    STRING_LITERAL  [reduce using rule 82 (call_args)]
    NUM             [reduce using rule 82 (call_args)]
    TRUE            [reduce using rule 82 (call_args)]
    FALSE           [reduce using rule 82 (call_args)]
    DEF             [reduce using rule 82 (call_args)]
    T_BEGIN         [reduce using rule 82 (call_args)]
    IF              [reduce using rule 82 (call_args)]
    WHILE           [reduce using rule 82 (call_args)]
    FOR             [reduce using rule 82 (call_args)]
    DO              [reduce using rule 82 (call_args)]
    CALL            [reduce using rule 82 (call_args)]
    RETURN          [reduce using rule 82 (call_args)]
    VAR             [reduce using rule 82 (call_args)]
    NULLPTR         [reduce using rule 82 (call_args)]
    ADDRESS         [reduce using rule 82 (call_args)]
    LPAREN          [reduce using rule 82 (call_args)]
    LBRACK          [reduce using rule 82 (call_args)]
    $default        reduce using rule 82 (call_args)

    func_list        go to state 56
    function         go to state 5
    stmt             go to state 277
    assignment       go to state 59
    var_stmt         go to state 60
    return_stmt      go to state 61
    if_stmt          go to state 62
    while_stmt       go to state 63
    do_while_stmt    go to state 64
    for_stmt         go to state 65
    call_args        go to state 66
    call_list        go to state 67
    assignment_call  go to state 68
    void_call        go to state 69
    block            go to state 278
    expr             go to state 71


State 269

   53 type_decl: TYPE TYPE_INT COLON ID COLON NUM SEMICOLON •

    $default  reduce using rule 53 (type_decl)


State 270

   54 type_decl: TYPE TYPE_CHAR COLON ID COLON CHAR_LITERAL SEMICOLON •

    $default  reduce using rule 54 (type_decl)


State 271

   52 type_decl: TYPE TYPE_REAL COLON ID COLON NUM SEMICOLON •

    $default  reduce using rule 52 (type_decl)


State 272

   56 type_decl: TYPE TYPE_BOOL COLON ID COLON TRUE SEMICOLON •

    $default  reduce using rule 56 (type_decl)


State 273

   57 type_decl: TYPE TYPE_BOOL COLON ID COLON FALSE SEMICOLON •

    $default  reduce using rule 57 (type_decl)


State 274

   55 type_decl: TYPE TYPE_STRING COLON ID COLON STRING_LITERAL SEMICOLON •

    $default  reduce using rule 55 (type_decl)


State 275

   58 type_decl: TYPE TYPE_STRING COLON ID LBRACK NUM RBRACK • SEMICOLON

    SEMICOLON  shift, and go to state 279


State 276

   70 elif_list: elif_list ELIF expr COLON block •

    $default  reduce using rule 70 (elif_list)


State 277

   78 for_stmt: FOR LPAREN assignment expr SEMICOLON update_expr RPAREN COLON stmt •

    $default  reduce using rule 78 (for_stmt)


State 278

   31 stmt: block •
   77 for_stmt: FOR LPAREN assignment expr SEMICOLON update_expr RPAREN COLON block •

    $end            reduce using rule 31 (stmt)
    $end            [reduce using rule 77 (for_stmt)]
    OR              reduce using rule 31 (stmt)
    OR              [reduce using rule 77 (for_stmt)]
    AND             reduce using rule 31 (stmt)
    AND             [reduce using rule 77 (for_stmt)]
    MULT            reduce using rule 31 (stmt)
    MULT            [reduce using rule 77 (for_stmt)]
    NOT             reduce using rule 31 (stmt)
    NOT             [reduce using rule 77 (for_stmt)]
    ID              reduce using rule 31 (stmt)
    ID              [reduce using rule 77 (for_stmt)]
    CHAR_LITERAL    reduce using rule 31 (stmt)
    CHAR_LITERAL    [reduce using rule 77 (for_stmt)]
    STRING_LITERAL  reduce using rule 31 (stmt)
    STRING_LITERAL  [reduce using rule 77 (for_stmt)]
    NUM             reduce using rule 31 (stmt)
    NUM             [reduce using rule 77 (for_stmt)]
    TRUE            reduce using rule 31 (stmt)
    TRUE            [reduce using rule 77 (for_stmt)]
    FALSE           reduce using rule 31 (stmt)
    FALSE           [reduce using rule 77 (for_stmt)]
    DEF             reduce using rule 31 (stmt)
    DEF             [reduce using rule 77 (for_stmt)]
    T_BEGIN         reduce using rule 31 (stmt)
    T_BEGIN         [reduce using rule 77 (for_stmt)]
    T_END           reduce using rule 31 (stmt)
    T_END           [reduce using rule 77 (for_stmt)]
    IF              reduce using rule 31 (stmt)
    IF              [reduce using rule 77 (for_stmt)]
    ELSE            reduce using rule 31 (stmt)
    ELSE            [reduce using rule 77 (for_stmt)]
    WHILE           reduce using rule 31 (stmt)
    WHILE           [reduce using rule 77 (for_stmt)]
    FOR             reduce using rule 31 (stmt)
    FOR             [reduce using rule 77 (for_stmt)]
    DO              reduce using rule 31 (stmt)
    DO              [reduce using rule 77 (for_stmt)]
    CALL            reduce using rule 31 (stmt)
    CALL            [reduce using rule 77 (for_stmt)]
    RETURN          reduce using rule 31 (stmt)
    RETURN          [reduce using rule 77 (for_stmt)]
    VAR             reduce using rule 31 (stmt)
    VAR             [reduce using rule 77 (for_stmt)]
    NULLPTR         reduce using rule 31 (stmt)
    NULLPTR         [reduce using rule 77 (for_stmt)]
    ADDRESS         reduce using rule 31 (stmt)
    ADDRESS         [reduce using rule 77 (for_stmt)]
    LPAREN          reduce using rule 31 (stmt)
    LPAREN          [reduce using rule 77 (for_stmt)]
    LBRACK          reduce using rule 31 (stmt)
    LBRACK          [reduce using rule 77 (for_stmt)]
    $default        reduce using rule 31 (stmt)


State 279

   58 type_decl: TYPE TYPE_STRING COLON ID LBRACK NUM RBRACK SEMICOLON •

    $default  reduce using rule 58 (type_decl)
